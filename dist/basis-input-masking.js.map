{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 24ecebb609a4836ec018","webpack:///external {\"commonjs\":\"bbj-masks/src/StringMask\",\"commonjs2\":\"bbj-masks/src/StringMask\",\"amd\":\"bbj-masks/src/StringMask\",\"root\":[\"BBj\",\"Masks\",\"StringMask\"]}","webpack:///./src/index.js","webpack:///./src/TextInput/index.js","webpack:///./src/TextInput/TextInput.js","webpack:///./src/TextInput/tools.js","webpack:///./src/NumberInput/index.js","webpack:///./src/NumberInput/NumberInput.js","webpack:///external {\"commonjs\":\"bbj-masks/src/NumberMask\",\"commonjs2\":\"bbj-masks/src/NumberMask\",\"amd\":\"bbj-masks/src/NumberMask\",\"root\":[\"BBj\",\"Masks\",\"NumberMask\"]}"],"names":["TextInput","options","elements","doc","document","cssClassError","cssClassSuccess","onUpdate","onInvalid","_onKeystroke","bind","_onFocus","refresh","querySelectorAll","input","parentClass","i","length","HTMLInputElement","parentNode","getAttribute","console","warn","isWrapped","indexOf","_wrap","parent","_unwrap","inputId","inputName","mask","dataset","originalPattern","pattern","defaultPattern","generatePatternFromMask","wrap","unmaskInput","createElement","querySelector","value","maskIfNotMasked","classList","add","valueUnmasked","unmask","isCustomPattern","hasAttribute","addEventListener","insertBefore","_validateInput","__fireOnUpdate","setAttribute","appendChild","textInput","removeChild","removeEventListener","removeAttribute","remove","e","ctrlKey","shiftKey","altKey","metaKey","keyCode","preventDefault","target","eventType","type","setCustomValidity","keyContent","key","code","replace","insertPosition","findCaretPosition","newValue","unmaskedValue","maskError","clipboardData","window","getData","selectionStart","substr","StringMask","__applyCssClassState","error","__fireOnInvalid","_updateCaretPosition","setTimeout","position","setSelectionRange","isValid","checkValidity","validationMessage","valueMasked","state","SUPPORTED_MASKS","IS_UNICODE_PROPERTY_SUPPORTED","eval","err","isMaskedValue","__CACHE__","cacheKey","maskAsArry","split","regex","forEach","c","maskedValue","maskAsArray","maskedValueAsArray","unmasked","index","el","elHasMask","RegExp","test","toLocaleLowerCase","concat","Array","join","NumberInput","countDecimals","toString","_actualInputHandler","_unmaskedInputHandler","actualInput","actualInputId","actualInputName","actualInputStep","step","actualInputMax","max","actualInputMin","min","actualInputGroupingSeparator","groupingSeparator","actualInputDecimalSeparator","decimalSeparator","actualInputForceTrailingZeros","forceTrailingZeros","actualInputMask","actualInputClasses","actualInputRequired","unmaskedInput","NumberMask","trim","decimals","isNaN","Number","wrapper","id","focus","String","restore","apply"],"mappings":"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","file":"basis-input-masking.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"bbj-masks/src/StringMask\"), require(\"bbj-masks/src/NumberMask\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"bbj-masks/src/StringMask\", \"bbj-masks/src/NumberMask\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"InputMasking\"] = factory(require(\"bbj-masks/src/StringMask\"), require(\"bbj-masks/src/NumberMask\"));\n\telse\n\t\troot[\"Basis\"] = root[\"Basis\"] || {}, root[\"Basis\"][\"InputMasking\"] = factory(root[\"BBj\"][\"Masks\"][\"StringMask\"], root[\"BBj\"][\"Masks\"][\"NumberMask\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 24ecebb609a4836ec018","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"bbj-masks/src/StringMask\",\"commonjs2\":\"bbj-masks/src/StringMask\",\"amd\":\"bbj-masks/src/StringMask\",\"root\":[\"BBj\",\"Masks\",\"StringMask\"]}\n// module id = 0\n// module chunks = 0 1","/*\r\n * This file is part of basis-input-masking lib.\r\n * (c) Basis Europe <eu@basis.com>\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\n\r\nimport TextInput from './TextInput'\r\nimport NumberInput from './NumberInput'\r\n\r\nexport { TextInput , NumberInput}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/*\r\n * This file is part of basis-input-masking lib.\r\n * (c) Basis Europe <eu@basis.com>\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\n\r\nimport TextInput from './TextInput'\r\n\r\nexport default TextInput\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/TextInput/index.js","/*\r\n * This file is part of basis-input-masking lib.\r\n * (c) Basis Europe <eu@basis.com>\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\n\r\nimport StringMask from 'bbj-masks/src/StringMask'\r\nimport {\r\n  maskIfNotMasked,\r\n  unmask,\r\n  findCaretPosition,\r\n  generatePatternFromMask,\r\n} from './tools.js'\r\n\r\n/**\r\n * The `TextInput` will wrap text inputs and apply the given [bbj string mask](https://github.com/BasisHub/bbj-masks#string-masks)\r\n *\r\n * **Options**\r\n *\r\n * _Options can be passed via data attributes . For data attributes, append the option name to data-, as in data-mask_\r\n *\r\n * | Option    | Default | Description                                                                                             |\r\n * |-----------|---------|---------------------------------------------------------------------------------------------------------|\r\n * | mask |         | The bbj string mask @see [BBj String Masks](https://github.com/BasisHub/bbj-masks#string-masks) |\r\n *\r\n *  <br>\r\n *\r\n * **Example :**\r\n * ```html\r\n *  <input class=\"bbj-text-masked\" name=\"test\" id=\"test\" value=\"ed23\" data-mask=\"AA-00\">\r\n *\r\n *  <script>\r\n *    document.addEventListener('DOMContentLoaded', function (e) {\r\n *      new Basis.InputMasking.TextInput({\r\n *         onUpdate: (maskedValue , rawValue , input) => {\r\n *            // do something\r\n *         },\r\n *         onInvalid: (err , input) => {\r\n *            // do something\r\n *         }\r\n *      })\r\n *    })\r\n *  </script>\r\n * ```\r\n *\r\n * @author Hyyan Abo Fakher <habofakher@basis.com>\r\n */\r\nclass TextInput {\r\n  /**\r\n   * Construct new TextInput\r\n   *\r\n   * @param {?Object} options - The input options.\r\n   * @param {HTMLElement|String} [options.elements=\".bbj-text-masked\"] - The class name or the node to use\r\n   * @param {HTMLDocument} [options.document=document] - Document instance to use\r\n   * @param {String} [options.cssClassError=\"bbj-mask-error\"] - A css class to attach to the input when it is invalid\r\n   * @param {String} [options.cssClassSuccess=\"bbj-mask-success\"] - A css class to attach to the input when it is valid after the user interaction\r\n   * @param {Function} [options.onUpdate=null] - A callback to be called on the new masked value is set\r\n   * @param {Function} [options.onInvalid=null] - A callback to be called on the input or the mask is invalid\r\n   */\r\n  constructor(options = {}) {\r\n    this.options = {\r\n      ...{\r\n        elements: '.bbj-text-masked',\r\n        doc: document,\r\n        cssClassError: 'bbj-mask-error',\r\n        cssClassSuccess: 'bbj-mask-success',\r\n        onUpdate: null,\r\n        onInvalid: null,\r\n      },\r\n      ...options,\r\n    }\r\n    this._onKeystroke = this._onKeystroke.bind(this)\r\n    this._onFocus = this._onFocus.bind(this)\r\n    this.refresh()\r\n  }\r\n\r\n  /**\r\n   * Initialize the component and wrap the input elements for masking in case\r\n   * they are not wrapped yet\r\n   */\r\n  refresh() {\r\n    const elements =\r\n      typeof this.options.elements === 'string'\r\n        ? this.options.doc.querySelectorAll(this.options.elements)\r\n        : this.options.elements\r\n    let input, parentClass\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n      input = elements[i]\r\n      if (input instanceof HTMLInputElement) {\r\n        parentClass = input.parentNode.getAttribute('class')\r\n\r\n        if (!input.getAttribute('id')) {\r\n          console.warn(\r\n            `BBjMasking: Input has no ID. Without an ID the input cannot be masked`,\r\n            input\r\n          )\r\n          continue\r\n        }\r\n\r\n        // we don't initialize the input's wrap twice\r\n        const isWrapped =\r\n          parentClass && parentClass.indexOf('textInputMask__wrap') > -1\r\n        this._wrap(input, isWrapped)\r\n      } else {\r\n        console.warn(\r\n          `BBjMasking: Invalid input element. The element will be ignored`,\r\n          input\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unwrap the input elements and remove attached listeners\r\n   */\r\n  destroy() {\r\n    const elements =\r\n      typeof this.options.elements === 'string'\r\n        ? this.options.doc.querySelectorAll(this.options.elements)\r\n        : this.options.elements\r\n\r\n    let input, parent, parentClass\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n      input = elements[i]\r\n      parent = input.parentNode\r\n      parentClass = parent.getAttribute('class')\r\n\r\n      if (parentClass && parentClass.indexOf('textInputMask__wrap') > -1) {\r\n        this._unwrap(parent)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create the text masking input wrapper\r\n   *\r\n   * @param {HTMLInputElement} input the input element\r\n   * @param {Boolean} isWrapped when true the input is already wrapped and we need to add what is\r\n   *                            missing only\r\n   *\r\n   * @returns {HTMLSpanElement} the wrap element\r\n   *\r\n   * @protected\r\n   */\r\n  _wrap(input, isWrapped) {\r\n    const inputId = input.getAttribute('id'),\r\n      inputName = input.getAttribute('name'),\r\n      mask = input.dataset.mask || '',\r\n      originalPattern = input.pattern,\r\n      defaultPattern = generatePatternFromMask(mask),\r\n      pattern = originalPattern || defaultPattern\r\n\r\n    let wrap = null,\r\n      unmaskInput = null\r\n\r\n    if (!isWrapped) {\r\n      wrap = document.createElement('span')\r\n      unmaskInput = document.createElement('input') // hidden input with the unmasked values for forms\r\n    } else {\r\n      wrap = input.parentNode\r\n      unmaskInput = wrap.querySelector('.textInputMask__unmaskedInput')\r\n    }\r\n\r\n    // configure the actual input\r\n    // -----------------------------------------------------\r\n    input.value = maskIfNotMasked(input.value, mask)\r\n    input.pattern = pattern\r\n    input.classList.add('textInputMask__textInput')\r\n    input.dataset.mask = mask\r\n    input.dataset.valueUnmasked = unmask(input.value, mask)\r\n    if (originalPattern && originalPattern !== defaultPattern) {\r\n      input.dataset.isCustomPattern = true\r\n    }\r\n\r\n    if (!isWrapped) {\r\n      if (!(input.hasAttribute('readonly') || input.hasAttribute('disable'))) {\r\n        input.addEventListener('keyup', this._onKeystroke)\r\n        input.addEventListener('keypress', this._onKeystroke)\r\n        input.addEventListener('paste', this._onKeystroke)\r\n        input.addEventListener('focusin', this._onFocus)\r\n        input.addEventListener('click', this._onFocus)\r\n      }\r\n      input.parentNode.insertBefore(wrap, input) // move the input outside the wrapper\r\n    }\r\n\r\n    if (this._validateInput(input)) {\r\n      this.__fireOnUpdate(input.value, input.dataset.valueUnmasked, input)\r\n    }\r\n\r\n    // configure the unmasked input\r\n    // ----------------------------------------------------\r\n    unmaskInput.setAttribute('aria-hidden', 'true')\r\n    unmaskInput.setAttribute('type', 'hidden')\r\n    unmaskInput.classList.add('textInputMask__unmaskedInput')\r\n    unmaskInput.value = input.dataset.valueUnmasked\r\n    if (inputId) unmaskInput.setAttribute('id', `${inputId}-unmasked`)\r\n    if (inputName) unmaskInput.setAttribute('name', `${inputName}-unmasked`)\r\n\r\n    if (!isWrapped) {\r\n      // configure the wrapper\r\n      wrap.setAttribute('class', 'textInputMask__wrap')\r\n      wrap.appendChild(unmaskInput)\r\n      wrap.appendChild(input)\r\n    }\r\n\r\n    return wrap\r\n  }\r\n\r\n  /**\r\n   * Unwrap the masked input and remove the value changed listener\r\n   *\r\n   * @param {HTMLSpanElement} textInput the wrapper span instance\r\n   *\r\n   * @protected\r\n   */\r\n  _unwrap(textInput) {\r\n    textInput.removeChild(\r\n      textInput.querySelector('.textInputMask__unmaskedInput')\r\n    )\r\n\r\n    const input = textInput.querySelector('.textInputMask__textInput')\r\n    input.removeEventListener('keyup', this._onKeystroke)\r\n    input.removeEventListener('keypress', this._onKeystroke)\r\n    input.removeEventListener('paste', this._onKeystroke)\r\n    input.removeEventListener('focusin', this._onFocus)\r\n    input.removeEventListener('click', this._onFocus)\r\n    delete input.dataset.valueUnmasked\r\n    if (!input.dataset.isCustomPattern) {\r\n      input.removeAttribute('pattern')\r\n      delete input.dataset.isCustomPattern\r\n    }\r\n\r\n    input.classList.remove(this.options.cssClassError)\r\n\r\n    textInput.parentNode.insertBefore(input, textInput)\r\n    textInput.parentNode.removeChild(textInput)\r\n  }\r\n\r\n  /**\r\n   * Listen to every keystroke on the input and update the masked and the unmasked value\r\n   *\r\n   * @param {Event} e\r\n   *\r\n   * @protected\r\n   */\r\n  _onKeystroke(e) {\r\n    if (e.ctrlKey || e.shiftKey || e.altKey || e.metaKey) return\r\n    if(e.keyCode !== 13) e.preventDefault()\r\n    \r\n    const input = e.target,\r\n      mask = input.dataset.mask || this.options.mask,\r\n      eventType = e.type\r\n\r\n    input.classList.remove(this.options.cssClassError)\r\n    input.classList.remove(this.options.cssClassSuccess)\r\n    input.setCustomValidity('');\r\n\r\n    let value = input.value,\r\n      keyCode = e.keyCode,\r\n      keyContent = e.key || e.code.replace(/[^0-9]/g, ''),\r\n      key = keyContent ? (keyContent.length > 1 ? '' : keyContent) : '',\r\n      insertPosition = findCaretPosition(value, mask),\r\n      newValue,\r\n      unmaskedValue,\r\n      maskError = false\r\n\r\n    switch (eventType) {\r\n      case 'paste':\r\n        newValue = maskIfNotMasked(\r\n          (e.clipboardData || window.clipboardData).getData('Text'),\r\n          mask\r\n        )\r\n        break\r\n      case 'keyup':\r\n        newValue = value\r\n        break\r\n      case 'keypress':\r\n        const selectionStart = input.selectionStart\r\n        if (selectionStart !== insertPosition) insertPosition = selectionStart\r\n\r\n        newValue =\r\n          value.substr(0, insertPosition) + key + value.substr(insertPosition)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    unmaskedValue = unmask(newValue, mask)\r\n\r\n    if ([35, 36, 37, 38, 39, 40].indexOf(keyCode) === -1) {\r\n      try {\r\n        input.value = StringMask.mask(unmaskedValue, mask, false)\r\n        if(this._validateInput(input)) {\r\n          input.dataset.valueUnmasked = unmaskedValue\r\n          this.options.doc.querySelector(\r\n            `#${input.getAttribute('id')}-unmasked`\r\n          ).value = unmaskedValue\r\n          this.__applyCssClassState(input, 'success')\r\n          this.__fireOnUpdate(input.value, input.dataset.valueUnmasked, input)\r\n        }\r\n        maskError = false\r\n      } catch (error) {\r\n        this.__applyCssClassState(input, 'error')\r\n        this.__fireOnInvalid(error, input)\r\n        maskError = true\r\n      }\r\n\r\n      this._updateCaretPosition(input, mask)\r\n    }\r\n\r\n    if (!maskError) this._validateInput(input)\r\n  }\r\n\r\n  /**\r\n   * Listen to focus events on the input and update the caret position\r\n   * where the next char should be inserted according to the mask\r\n   *\r\n   * @param {FocusEvent} e\r\n   *\r\n   * @protected\r\n   */\r\n  _onFocus(e) {\r\n    const input = e.target\r\n    const mask = input.dataset.mask || this.options.mask\r\n    this._updateCaretPosition(input, mask)\r\n  }\r\n\r\n  /**\r\n   * Update the caret position on the input based on the given mask\r\n   *\r\n   * @param {HTMLInputElement} input instance\r\n   * @param {String} mask  bbj string\r\n   *\r\n   * @protected\r\n   */\r\n  _updateCaretPosition(input, mask) {\r\n    setTimeout(() => {\r\n      const position = findCaretPosition(input.value, mask)\r\n      input.setSelectionRange(position, position)\r\n    }, 0)\r\n  }\r\n\r\n  /**\r\n   * Trigger `checkValidity` on the input\r\n   *\r\n   * @param {HTMLInputElement} input\r\n   *\r\n   * @returns {Boolean} true when valid , false otherwise\r\n   *\r\n   * @protected\r\n   */\r\n  _validateInput(input) {\r\n    const isValid = input.checkValidity()\r\n\r\n    if (isValid) {\r\n      this.__applyCssClassState(input, 'success')\r\n      input.setCustomValidity('')\r\n    } else {\r\n      this.__applyCssClassState(input, 'error')\r\n      this.__fireOnInvalid(input.validationMessage, input)\r\n    }\r\n\r\n    return isValid\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __fireOnUpdate(valueMasked, valueUnmasked, input) {\r\n    if (this.options.onUpdate) {\r\n      this.options.onUpdate(valueMasked, valueUnmasked, input)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __fireOnInvalid(error, input) {\r\n    if (this.options.onInvalid) {\r\n      this.options.onInvalid(error, input)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __applyCssClassState(input, state) {\r\n    if (input.hasAttribute('readonly') || input.hasAttribute('disabled')) {\r\n      input.classList.remove(this.options.cssClassError)\r\n      input.classList.remove(this.options.cssClassSuccess)\r\n    } else {\r\n      if (state === 'success') {\r\n        input.classList.remove(this.options.cssClassError)\r\n        input.classList.add(this.options.cssClassSuccess)\r\n      }\r\n\r\n      if (state === 'error') {\r\n        input.classList.add(this.options.cssClassError)\r\n        input.classList.remove(this.options.cssClassSuccess)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default TextInput\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/TextInput/TextInput.js","/*\r\n * This file is part of basis-input-masking lib.\r\n * (c) Basis Europe <eu@basis.com>\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\n\r\nimport StringMask from 'bbj-masks/src/StringMask'\r\n\r\nconst SUPPORTED_MASKS = ['X', 'a', 'A', '0', 'z', 'Z', 'U']\r\n/**\r\n * When true , then the browser supports Unicode Property Escapes\r\n * otherwise it is false \r\n * \r\n * {@link https://github.com/tc39/proposal-regexp-unicode-property-escapes}\r\n */\r\nlet IS_UNICODE_PROPERTY_SUPPORTED = false\r\ntry {\r\n  eval('/\\\\p{L}/u')\r\n  IS_UNICODE_PROPERTY_SUPPORTED = true\r\n} catch (err) {\r\n  IS_UNICODE_PROPERTY_SUPPORTED = false\r\n}\r\n\r\n/**\r\n * Check if the given value is masked with the given mask or not\r\n *\r\n * @param {String} value masked or unmasked value\r\n * @param {String} mask  a bbj mask\r\n *\r\n * @return {Boolean} true when the value is masked with given mask , false otherwise\r\n */\r\nconst isMaskedValue = (value, mask) => {\r\n  if (typeof isMaskedValue.__CACHE__ === 'undefined') {\r\n    isMaskedValue.__CACHE__ = {}\r\n  }\r\n\r\n  const cacheKey = `${value}-${mask}`\r\n\r\n  if (!isMaskedValue.__CACHE__[cacheKey]) {\r\n    const unmaskedValue = unmask(value, mask)\r\n    isMaskedValue.__CACHE__[cacheKey] =\r\n      value === StringMask.mask(unmaskedValue, mask)\r\n  }\r\n\r\n  return isMaskedValue.__CACHE__[cacheKey]\r\n}\r\n\r\n/**\r\n * Mask the given value with the given mask in case the value is not already masked with the\r\n * given mask\r\n *\r\n * @param {String} value masked or unmasked value\r\n * @param {String} mask  a bbj mask\r\n *\r\n * @return {String} a masked value\r\n */\r\nconst maskIfNotMasked = (value, mask) => {\r\n  if (typeof maskIfNotMasked.__CACHE__ === 'undefined') {\r\n    maskIfNotMasked.__CACHE__ = {}\r\n  }\r\n\r\n  const cacheKey = `${value}-${mask}`\r\n\r\n  if (!maskIfNotMasked.__CACHE__[cacheKey]) {\r\n    if (isMaskedValue(value, mask)) {\r\n      maskIfNotMasked.__CACHE__[cacheKey] = value\r\n    } else {\r\n      try {\r\n        maskIfNotMasked.__CACHE__[cacheKey] = StringMask.mask(\r\n          value,\r\n          mask,\r\n          false\r\n        )\r\n      } catch (e) {\r\n        maskIfNotMasked.__CACHE__[cacheKey] = StringMask.mask('', mask)\r\n      }\r\n    }\r\n  }\r\n\r\n  return maskIfNotMasked.__CACHE__[cacheKey]\r\n}\r\n\r\n/**\r\n * Generate a regex patter based on the give task\r\n *\r\n * @param {String} mask  bbj string mask\r\n *\r\n * @return {String} regex for the give mask\r\n */\r\nconst generatePatternFromMask = mask => {\r\n  if (typeof generatePatternFromMask.__CACHE__ === 'undefined') {\r\n    generatePatternFromMask.__CACHE__ = {}\r\n  }\r\n\r\n  const cacheKey = mask\r\n\r\n  if (!generatePatternFromMask.__CACHE__[cacheKey]) {\r\n    const maskAsArry = mask.split('')\r\n    let regex = ''\r\n    maskAsArry.forEach(c => {\r\n      switch (c) {\r\n        case 'X':\r\n          regex += '([^ -~])'\r\n          break\r\n        case 'a':\r\n        case 'A':\r\n          // https://mothereff.in/regexpu#input=var+regex+%3D+/%5Cp%7BL%7D/u%3B&unicodePropertyEscape=1\r\n          // https://stackoverflow.com/questions/150033/regular-expression-to-match-non-ascii-characters#answer-48902765\r\n          regex += IS_UNICODE_PROPERTY_SUPPORTED\r\n            ? '\\\\p{L}'\r\n            : '((?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDEC0-\\uDEEB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]))'\r\n          break\r\n        case '0':\r\n          regex += '([0-9])'\r\n          break\r\n        case 'z':\r\n        case 'Z':\r\n          regex += IS_UNICODE_PROPERTY_SUPPORTED\r\n            ? '([0-9]|\\\\p{L})'\r\n            : '([0-9]|(?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDEC0-\\uDEEB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]))'\r\n          break\r\n        case 'U':\r\n          regex += IS_UNICODE_PROPERTY_SUPPORTED\r\n            ? '(([0-9])|(\\\\s)|([.,/#!$%^&*;:{}=-_`~()])|(\\\\p{L}))'\r\n            : '(([0-9])|(\\\\s)|([.,/#!$%^&*;:{}=-_`~()])|(?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDEC0-\\uDEEB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]))'\r\n          break\r\n        default:\r\n          regex += c.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\r\n          break\r\n      }\r\n    })\r\n\r\n    generatePatternFromMask.__CACHE__[cacheKey] = regex\r\n  }\r\n\r\n  return generatePatternFromMask.__CACHE__[cacheKey]\r\n}\r\n\r\n/**\r\n * Unmask the given value\r\n *\r\n * @param {String} maskedValue masked string\r\n * @param {String} mask  the used mask to produce the masked string\r\n */\r\nconst unmask = (maskedValue, mask) => {\r\n  if (typeof unmask.__CACHE__ === 'undefined') {\r\n    unmask.__CACHE__ = {}\r\n  }\r\n\r\n  const cacheKey = `${maskedValue}-${mask}`\r\n\r\n  if (!unmask.__CACHE__[cacheKey]) {\r\n    const maskAsArray = mask.split('')\r\n    const maskedValueAsArray = maskedValue.split('')\r\n\r\n    let unmasked = ''\r\n\r\n    for (let index = 0; index < maskedValueAsArray.length; index++) {\r\n      const el = maskedValueAsArray[index]\r\n      const mask = maskAsArray[index]\r\n      const elHasMask = SUPPORTED_MASKS.indexOf(mask) > -1\r\n      if (elHasMask) {\r\n        const pattern = new RegExp(\r\n          generatePatternFromMask(mask),\r\n          IS_UNICODE_PROPERTY_SUPPORTED ? 'u' : ''\r\n        )\r\n        if (pattern.test(el)) unmasked += el\r\n        else break\r\n      }\r\n    }\r\n\r\n    unmask.__CACHE__[cacheKey] = unmasked.toLocaleLowerCase()\r\n  }\r\n\r\n  return unmask.__CACHE__[cacheKey]\r\n}\r\n\r\n/**\r\n * Given the masked string , find the next caret position depending on\r\n * what is missing to complete the mask\r\n *\r\n * @param {String} maskedValue masked string\r\n * @param {String} mask  the used mask to produce the masked string\r\n */\r\nconst findCaretPosition = (maskedValue, mask) => {\r\n  if (typeof findCaretPosition.__CACHE__ === 'undefined') {\r\n    findCaretPosition.__CACHE__ = {}\r\n  }\r\n\r\n  const cacheKey = `${maskedValue}-${mask}`\r\n  if (!findCaretPosition.__CACHE__[cacheKey]) {\r\n    const maskAsArray = mask.split('')\r\n    let maskedValueAsArray = maskedValue.split('')\r\n    if (maskedValueAsArray.length < maskAsArray.length) {\r\n      maskedValueAsArray = maskedValueAsArray.concat(\r\n        new Array(maskAsArray.length - maskedValueAsArray.length).join(' ').split('')\r\n      )\r\n    }\r\n\r\n    let position = -1\r\n    for (let index = 0; index < maskAsArray.length; index++) {\r\n      const el = maskAsArray[index]\r\n      if (el !== maskedValueAsArray[index]) {\r\n        // if (maskedValueAsArray[index] === ' ') return index\r\n        if (SUPPORTED_MASKS.indexOf(el) > -1) {\r\n          const pattern = new RegExp(\r\n            generatePatternFromMask(el),\r\n            IS_UNICODE_PROPERTY_SUPPORTED ? 'u' : ''\r\n          )\r\n\r\n          if (!pattern.test(maskedValueAsArray[index])) {\r\n            position = index\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    findCaretPosition.__CACHE__[cacheKey] =\r\n      position < 0 ? maskedValueAsArray.length : position\r\n  }\r\n\r\n  return findCaretPosition.__CACHE__[cacheKey]\r\n}\r\n\r\nexport {\r\n  isMaskedValue,\r\n  maskIfNotMasked,\r\n  unmask,\r\n  findCaretPosition,\r\n  generatePatternFromMask,\r\n  IS_UNICODE_PROPERTY_SUPPORTED,\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/TextInput/tools.js","/*\r\n * This file is part of basis-input-masking lib.\r\n * (c) Basis Europe <eu@basis.com>\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\n\r\nimport NumberInput from './NumberInput'\r\n\r\nexport default NumberInput\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/NumberInput/index.js","/*\r\n * This file is part of basis-input-masking lib.\r\n * (c) Basis Europe <eu@basis.com>\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\n\r\nimport NumberMask from 'bbj-masks/src/NumberMask'\r\n\r\nconst countDecimals = value => {\r\n  if (value % 1 != 0) {\r\n    const split = value.toString().split('.')\r\n    if (split.length === 2) return split[1].length\r\n  }\r\n  return 0\r\n}\r\n\r\n/**\r\n * The `NumberInput` will wrap text inputs and apply the given [bbj Number mask](https://github.com/BasisHub/bbj-masks#number-masks)\r\n *\r\n * **Options**\r\n *\r\n * _Options can be passed via data attributes . For data attributes, append the option name to data-, as in data-mask_\r\n *\r\n * | Option    | Default | Description                                                                                             |\r\n * |-----------|---------|---------------------------------------------------------------------------------------------------------|\r\n * | mask |         | The bbj number mask @see [BBj Number Masks](https://github.com/BasisHub/bbj-masks#number-masks) |\r\n * | min |         | The maximum value to accept for this input|\r\n * | max |         | The minimum value to accept for this input|\r\n * | step |         | A stepping interval to use when using up and down arrows to adjust the value, as well as for validation|\r\n * |grouping-separator | , | a char which will be used as a grouping separator |\r\n * |decimal-separator | . | a char which will be used as a decimal separator |\r\n * |force-trailing-zeros | false | Affects the output by switching the way a mask with \"#\" characters in the trailing positions is filled. for example, the function NumberMask.mask(.10:\"#.##\") returns .10 instead of .1|\r\n *\r\n *  <br>\r\n *\r\n * **Example :**\r\n * ```html\r\n *  <input class=\"bbj-number-masked\" name=\"test\" id=\"test\" value=\"1234\" data-mask=\"##,##0\">\r\n *\r\n *  <script>\r\n *    document.addEventListener('DOMContentLoaded', function (e) {\r\n *      new Basis.InputMasking.NumberInput({\r\n *\r\n *         // @param {String} valueMasked  masked value\r\n *         // @param {Number} valueUnmasked  original value\r\n *         // @param {HTMLInputElement} input the actual input instance\r\n *         onUpdate: (valueMasked, valueUnmasked, input, isApplied, isInitial) => {\r\n *            // do something\r\n *         },\r\n *\r\n *         // @param {String|Object} error last occurred error. could be mask error or validation error\r\n *         // @param {HTMLInputElement} input the actual input instance\r\n *         onInvalid: (err , input) => {\r\n *            // do something\r\n *         }\r\n *      })\r\n *    })\r\n *  </script>\r\n * ```\r\n *\r\n * @author Hyyan Abo Fakher <habofakher@basis.com>\r\n */\r\nclass NumberInput {\r\n  /**\r\n   * Construct new NumberInput\r\n   *\r\n   * @param {?Object} options - The input options.\r\n   * @param {HTMLElement|String} [options.elements=\".bbj-number-masked\"] - The class name or the node to use\r\n   * @param {HTMLDocument} [options.document=document] - Document instance to use\r\n   * @param {String} [options.cssClassError=\"bbj-mask-error\"] - A css class to attach to the input when it is invalid\r\n   * @param {String} [options.cssClassSuccess=\"bbj-mask-success\"] - A css class to attach to the input when it is valid after the user interaction\r\n   * @param {Function} [options.onUpdate=null] - A callback to be called on the new masked value is set\r\n   * @param {Function} [options.onInvalid=null] - A callback to be called on the input or the mask is invalid\r\n   */\r\n  constructor(options = {}) {\r\n    this.options = {\r\n      ...{\r\n        elements: '.bbj-number-masked',\r\n        doc: document,\r\n        cssClassError: 'bbj-mask-error',\r\n        cssClassSuccess: 'bbj-mask-success',\r\n        onUpdate: null,\r\n        onInvalid: null,\r\n      },\r\n      ...options,\r\n    }\r\n\r\n    this._actualInputHandler = this._actualInputHandler.bind(this)\r\n    this._unmaskedInputHandler = this._unmaskedInputHandler.bind(this)\r\n    this.refresh()\r\n  }\r\n\r\n  /**\r\n   * Initialize the component and wrap the input elements for masking in case\r\n   * they are not wrapped yet\r\n   */\r\n  refresh() {\r\n    const elements =\r\n      typeof this.options.elements === 'string'\r\n        ? this.options.doc.querySelectorAll(this.options.elements)\r\n        : this.options.elements\r\n    let input, parentClass\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n      input = elements[i]\r\n      if (input instanceof HTMLInputElement) {\r\n        parentClass = input.parentNode.getAttribute('class')\r\n\r\n        if (!input.getAttribute('id')) {\r\n          console.warn(\r\n            `BBjMasking: Input has no ID. Without an ID the input cannot be masked`,\r\n            input\r\n          )\r\n          continue\r\n        }\r\n\r\n        // we don't initialize the input's wrap twice\r\n        const isWrapped =\r\n          parentClass && parentClass.indexOf('numberInputMask__wrap') > -1\r\n        this._wrap(input, isWrapped)\r\n      } else {\r\n        console.warn(\r\n          `BBjMasking: Invalid input element. The element will be ignored`,\r\n          input\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unwrap the input elements and remove attached listeners\r\n   */\r\n  destroy() {\r\n    const elements =\r\n      typeof this.options.elements === 'string'\r\n        ? this.options.doc.querySelectorAll(this.options.elements)\r\n        : this.options.elements\r\n\r\n    let input, parent, parentClass\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n      input = elements[i]\r\n      parent = input.parentNode\r\n      parentClass = parent.getAttribute('class')\r\n\r\n      if (parentClass && parentClass.indexOf('numberInputMask__wrap') > -1) {\r\n        this._unwrap(parent)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create the number masking input wrapper\r\n   *\r\n   * @param {HTMLInputElement} actualInput the input element\r\n   * @param {Boolean} isWrapped when true the input is already wrapped and we need to add what is\r\n   *                            missing only\r\n   *\r\n   * @returns {HTMLSpanElement} wrapper instance\r\n   *\r\n   * @protected\r\n   */\r\n  _wrap(actualInput, isWrapped) {\r\n    const actualInputId = actualInput.getAttribute('id'),\r\n      actualInputName = actualInput.getAttribute('name'),\r\n      actualInputStep = actualInput.dataset.step || null,\r\n      actualInputMax = actualInput.dataset.max || null,\r\n      actualInputMin = actualInput.dataset.min || null,\r\n      actualInputGroupingSeparator =\r\n        actualInput.dataset.groupingSeparator || ',',\r\n      actualInputDecimalSeparator = actualInput.dataset.decimalSeparator || '.',\r\n      actualInputForceTrailingZeros =\r\n        actualInput.dataset.forceTrailingZeros || null,\r\n      actualInputMask = actualInput.dataset.mask || '',\r\n      actualInputClasses = actualInput.getAttribute('class'),\r\n      actualInputRequired = actualInput.getAttribute('required') || null\r\n\r\n    let wrap = null,\r\n      unmaskedInput = null\r\n\r\n    if (!isWrapped) {\r\n      wrap = this.options.doc.createElement('span')\r\n      unmaskedInput = this.options.doc.createElement('input') // hidden input with the unmasked values for forms\r\n    } else {\r\n      wrap = actualInput.parentNode\r\n      unmaskedInput = wrap.querySelector('.numberInputMask__unmaskedInput')\r\n    }\r\n\r\n    // configure the actual input\r\n    // -----------------------------------------------------\r\n    if (!isWrapped) {\r\n      actualInput.parentNode.insertBefore(wrap, actualInput) // move the input outside the wrapper\r\n      if (\r\n        !(\r\n          actualInput.hasAttribute('readonly') ||\r\n          actualInput.hasAttribute('disabled')\r\n        )\r\n      ) {\r\n        actualInput.addEventListener('click', this._actualInputHandler)\r\n        actualInput.addEventListener('focusin', this._actualInputHandler)\r\n      }\r\n    }\r\n\r\n    actualInput.dataset.valueUnmasked = actualInput.value || 0\r\n    actualInput.dataset.groupingSeparator = actualInputGroupingSeparator\r\n    actualInput.dataset.decimalSeparator = actualInputDecimalSeparator\r\n    actualInput.dataset.forceTrailingZeros = actualInputForceTrailingZeros\r\n    actualInput.value = NumberMask.mask(\r\n      actualInput.dataset.valueUnmasked,\r\n      actualInputMask,\r\n      actualInputGroupingSeparator,\r\n      actualInputDecimalSeparator,\r\n      actualInputForceTrailingZeros\r\n    ).trim()\r\n    actualInput.classList.add(\r\n      'numberInputMask__textInput',\r\n      this.options.cssClassSuccess\r\n    )\r\n\r\n    // configure the unmasked input\r\n    // ----------------------------------------------------\r\n    unmaskedInput.value = actualInput.dataset.valueUnmasked\r\n    unmaskedInput.setAttribute('aria-hidden', 'true')\r\n    unmaskedInput.setAttribute('type', 'hidden')\r\n    unmaskedInput.setAttribute('class', actualInputClasses)\r\n    if (actualInputId)\r\n      unmaskedInput.setAttribute('id', `${actualInputId}-unmasked`)\r\n    if (actualInputName)\r\n      unmaskedInput.setAttribute('name', `${actualInputName}-unmasked`)\r\n    if (actualInputRequired) unmaskedInput.setAttribute('required', 'required')\r\n\r\n    if (actualInputStep) unmaskedInput.setAttribute('step', actualInputStep)\r\n    else {\r\n      const decimals = countDecimals(unmaskedInput.value)\r\n      let step = '1'\r\n      if (decimals > 0) {\r\n        step = `.${Array(decimals).join('0')}1`\r\n      }\r\n\r\n      unmaskedInput.setAttribute('step', step)\r\n    }\r\n\r\n    if (actualInputMin) unmaskedInput.setAttribute('min', actualInputMin)\r\n    if (actualInputMax) unmaskedInput.setAttribute('max', actualInputMax)\r\n    unmaskedInput.dataset.inputId = actualInputId\r\n    unmaskedInput.dataset.mask = actualInputMask\r\n    unmaskedInput.dataset.groupingSeparator = actualInputGroupingSeparator\r\n    unmaskedInput.dataset.decimalSeparator = actualInputDecimalSeparator\r\n    if (actualInputForceTrailingZeros)\r\n      unmaskedInput.dataset.forceTrailingZeros = actualInputForceTrailingZeros\r\n\r\n    if (!isWrapped) {\r\n      unmaskedInput.classList.add('numberInputMask__unmaskedInput')\r\n      unmaskedInput.addEventListener('keydown', this._unmaskedInputHandler)\r\n      unmaskedInput.addEventListener('keyup', this._unmaskedInputHandler)\r\n      unmaskedInput.addEventListener('focusout', this._unmaskedInputHandler)\r\n\r\n      // configure the wrapper\r\n      wrap.setAttribute('class', 'numberInputMask__wrap')\r\n      wrap.appendChild(unmaskedInput)\r\n      wrap.appendChild(actualInput)\r\n    }\r\n\r\n    if (!isNaN(Number(actualInput.dataset.valueUnmasked))) {\r\n      if (this._validateInput(unmaskedInput, actualInput)) {\r\n        this.__fireOnUpdate(\r\n          actualInput.value,\r\n          actualInput.dataset.valueUnmasked,\r\n          actualInput\r\n        )\r\n      }\r\n    } else {\r\n      actualInput.classList.add(this.options.cssClassError)\r\n    }\r\n\r\n    return wrap\r\n  }\r\n\r\n  /**\r\n   * Unwrap the masked input and remove the value changed listener\r\n   *\r\n   * @param {HTMLSpanElement} wrapper the wrapper span instance\r\n   *\r\n   * @protected\r\n   */\r\n  _unwrap(wrapper) {\r\n    const actualInput = wrapper.querySelector('.numberInputMask__textInput'),\r\n      actualInputId = actualInput.id,\r\n      unmaskedInput = wrapper.querySelector(`#${actualInputId}-unmasked`)\r\n\r\n    unmaskedInput.removeEventListener('keyup', this._unmaskedInputHandler)\r\n    unmaskedInput.removeEventListener('keypress', this._unmaskedInputHandler)\r\n    unmaskedInput.removeEventListener('focusout', this._unmaskedInputHandler)\r\n\r\n    wrapper.removeChild(unmaskedInput)\r\n\r\n    actualInput.removeEventListener('click', this._actualInputHandler)\r\n    actualInput.removeEventListener('focusin', this._actualInputHandler)\r\n    actualInput.classList.remove('numberInputMask__textInput')\r\n    actualInput.classList.remove(this.options.cssClassError)\r\n    actualInput.classList.remove(this.options.cssClassSuccess)\r\n    delete actualInput.dataset.valueUnmasked\r\n\r\n    wrapper.parentNode.insertBefore(actualInput, wrapper)\r\n    wrapper.parentNode.removeChild(wrapper)\r\n  }\r\n\r\n  /**\r\n   * Listen to click and focusin event on the actual input and toggle the number input\r\n   *\r\n   * @param {Event} e\r\n   *\r\n   * @protected\r\n   */\r\n  _actualInputHandler(e) {\r\n    const actualInput = e.target,\r\n      actualInputId = actualInput.id,\r\n      unmaskedInput = this.options.doc.querySelector(\r\n        `#${actualInputId}-unmasked`\r\n      )\r\n\r\n    actualInput.setAttribute('aria-hidden', 'true')\r\n    actualInput.setAttribute('type', 'hidden')\r\n\r\n    unmaskedInput.removeAttribute('aria-hidden')\r\n    unmaskedInput.setAttribute('type', 'number')\r\n    this._validateInput(unmaskedInput, actualInput)\r\n    setTimeout(() => {\r\n      unmaskedInput.focus()\r\n      const length = String(unmaskedInput.value).length\r\n      unmaskedInput.type = 'text'\r\n      unmaskedInput.setSelectionRange(length, length)\r\n      unmaskedInput.type = 'number'\r\n    }, 0)\r\n  }\r\n\r\n  /**\r\n   * Listen to the unmasked input keydown and focusout events and check\r\n   * if the input value can be masked or not\r\n   *\r\n   * @param {Event} e\r\n   *\r\n   * @protected\r\n   */\r\n  _unmaskedInputHandler(e) {\r\n    const unmaskedInput = e.target,\r\n      keyCode = e.keyCode,\r\n      mask = unmaskedInput.dataset.mask,\r\n      groupingSeparator = unmaskedInput.dataset.groupingSeparator,\r\n      decimalSeparator = unmaskedInput.dataset.decimalSeparator,\r\n      forceTrailingZeros = unmaskedInput.dataset.forceTrailingZeros,\r\n      actualInputId = unmaskedInput.dataset.inputId,\r\n      actualInput = this.options.doc.querySelector(`#${actualInputId}`)\r\n\r\n    let restore = false,\r\n      apply = false,\r\n      maskedValue = false,\r\n      isValid = this._validateInput(unmaskedInput, actualInput)\r\n\r\n    try {\r\n      maskedValue = NumberMask.mask(\r\n        unmaskedInput.value || 0,\r\n        mask,\r\n        groupingSeparator,\r\n        decimalSeparator,\r\n        forceTrailingZeros,\r\n        false\r\n      ).trim()\r\n    } catch (e) {\r\n      maskedValue = false\r\n      this.__applyCssClassState(unmaskedInput, actualInput, 'error')\r\n      this.__fireOnInvalid(e, actualInput)\r\n    }\r\n\r\n    restore = [13, 27].indexOf(keyCode) > -1 || e.type === 'focusout'\r\n    apply = maskedValue && isValid\r\n\r\n    if (restore) {\r\n      unmaskedInput.classList.remove(this.options.cssClassError)\r\n      unmaskedInput.classList.remove(this.options.cssClassSuccess)\r\n\r\n      unmaskedInput.setAttribute('aria-hidden', 'true')\r\n      unmaskedInput.setAttribute('type', 'hidden')\r\n\r\n      actualInput.removeAttribute('aria-hidden')\r\n      actualInput.setAttribute('type', 'text')\r\n\r\n      actualInput.classList.add(this.options.cssClassSuccess)\r\n\r\n      if (apply) {\r\n        actualInput.value = maskedValue\r\n        actualInput.dataset.valueUnmasked = unmaskedInput.value\r\n        this.__fireOnUpdate(maskedValue, unmaskedInput.value, actualInput)\r\n      } else {\r\n        unmaskedInput.value = actualInput.dataset.valueUnmasked\r\n        this.__applyCssClassState(unmaskedInput, actualInput, 'success')\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trigger `checkValidity` on the input\r\n   *\r\n   * @param {HTMLInputElement} unmaskedInput\r\n   * @param {HTMLInputElement} actualInput\r\n   *\r\n   * @returns {Boolean} true when valid , false otherwise\r\n   *\r\n   * @protected\r\n   */\r\n  _validateInput(unmaskedInput, actualInput) {\r\n    let isValid = true\r\n    const value = Number(unmaskedInput.value)\r\n    if (unmaskedInput.getAttribute('type') === 'hidden' && !isNaN(value)) {\r\n      const max = unmaskedInput.getAttribute('max')\r\n      const min = unmaskedInput.getAttribute('min')\r\n      const step = unmaskedInput.getAttribute('step')\r\n\r\n      if (min) isValid = isValid && value >= Number(min)\r\n      if (max) isValid = isValid && value <= Number(max)\r\n\r\n      if (step)\r\n        isValid =\r\n          isValid && countDecimals(step) === countDecimals(unmaskedInput.value)\r\n    } else isValid = unmaskedInput.checkValidity()\r\n\r\n    if (isValid) {\r\n      this.__applyCssClassState(unmaskedInput, actualInput, 'success')\r\n    } else {\r\n      this.__applyCssClassState(unmaskedInput, actualInput, 'error')\r\n      this.__fireOnInvalid(\r\n        unmaskedInput.validationMessage || 'Validity check fails',\r\n        actualInput\r\n      )\r\n    }\r\n\r\n    return isValid\r\n  }\r\n\r\n  /**\r\n   * @param {String} valueMasked  masked value\r\n   * @param {Number} valueUnmasked  original value\r\n   * @param {HTMLInputElement} input the actual input instance\r\n   *\r\n   * @private\r\n   */\r\n  __fireOnUpdate(valueMasked, valueUnmasked, input) {\r\n    if (this.options.onUpdate) {\r\n      this.options.onUpdate(valueMasked, valueUnmasked, input)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {String|Object} error last occurred error. could be mask error or validation error\r\n   * @param {HTMLInputElement} input the actual input instance\r\n   *\r\n   * @private\r\n   */\r\n  __fireOnInvalid(error, input) {\r\n    if (this.options.onInvalid) {\r\n      this.options.onInvalid(error, input)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __applyCssClassState(unmaskedInput, actualInput, state) {\r\n    if (\r\n      actualInput.hasAttribute('readonly') ||\r\n      actualInput.hasAttribute('disabled')\r\n    ) {\r\n      actualInput.classList.remove(this.options.cssClassError)\r\n      actualInput.classList.remove(this.options.cssClassSuccess)\r\n\r\n      unmaskedInput.classList.remove(this.options.cssClassError)\r\n      unmaskedInput.classList.remove(this.options.cssClassSuccess)\r\n    } else {\r\n      if (state === 'success') {\r\n        actualInput.classList.remove(this.options.cssClassError)\r\n        actualInput.classList.add(this.options.cssClassSuccess)\r\n\r\n        unmaskedInput.classList.remove(this.options.cssClassError)\r\n        unmaskedInput.classList.add(this.options.cssClassSuccess)\r\n      }\r\n\r\n      if (state === 'error') {\r\n        actualInput.classList.add(this.options.cssClassError)\r\n        actualInput.classList.remove(this.options.cssClassSuccess)\r\n\r\n        unmaskedInput.classList.add(this.options.cssClassError)\r\n        unmaskedInput.classList.remove(this.options.cssClassSuccess)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default NumberInput\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/NumberInput/NumberInput.js","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"bbj-masks/src/NumberMask\",\"commonjs2\":\"bbj-masks/src/NumberMask\",\"amd\":\"bbj-masks/src/NumberMask\",\"root\":[\"BBj\",\"Masks\",\"NumberMask\"]}\n// module id = 7\n// module chunks = 0 1"],"sourceRoot":""}